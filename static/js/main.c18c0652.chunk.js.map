{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","App.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","FeedbackOptions","options","onLeaveFeedback","good","neutral","bad","type","name","feedbackBtn","onClick","Statistics","total","positivePercentage","text","totalText","Notification","notification","App","state","handlFeedback","feedback","setState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","percentage","Math","round","container","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,UAAY,gC,gBCA9DD,EAAOC,QAAU,CAAC,YAAc,uC,qBCAhCD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,UAAY,yB,4KCgBfC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,gCACA,qBAAKC,UAAcC,IAAEH,MAArB,cAAiCA,KAC5BC,M,gBCMEG,EAXS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACxBC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,QAASC,EAAQJ,EAARI,IAC3B,OACI,gCACI,wBAAQC,KAAK,SAASC,KAAMJ,EAAML,UAAWC,IAAES,YAAaC,QAAS,kBAAIP,EAAgB,SAAzF,kBACA,wBAAQI,KAAK,SAASC,KAAMH,EAASN,UAAWC,IAAES,YAAaC,QAAS,kBAAIP,EAAgB,YAA5F,qBACA,wBAAQI,KAAK,SAASC,KAAMF,EAAKP,UAAWC,IAAES,YAAaC,QAAS,kBAAIP,EAAgB,QAAxF,qB,gBCOOQ,EAbI,SAAC,GAAsD,IAApDP,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKM,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC7C,OACI,gCACI,oBAAGd,UAAYC,IAAEc,KAAjB,mBAA8BV,KAC9B,oBAAGL,UAAYC,IAAEc,KAAjB,sBAAiCT,KACjC,oBAAGN,UAAYC,IAAEc,KAAjB,kBAA6BR,KAC7B,oBAAGP,UAAYC,IAAEe,UAAjB,oBAAoCH,KACrC,oBAAGb,UAAYC,IAAEe,UAAjB,gCAAiDF,EAAjD,W,iBCCIG,EARK,WACZ,OACI,8BACI,mBAAGjB,UAAYC,IAAEiB,aAAjB,kC,iBCgDDC,E,4MA9CbC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGNc,cAAgB,SAAAC,GACf,EAAKC,UAAS,SAAAH,GACZ,OAAO,eAAEE,EAAWF,EAAME,GAAY,O,EAIxCE,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAGvEC,gCAAkC,WAChC,IAAMC,EAAaC,KAAKC,MAAM,IAAM,EAAKb,MAAMf,KAAO,EAAKmB,sBAC3D,OAAOO,EAAa,EAAIA,EAAa,G,uDAIvC,OACE,sBAAK/B,UAAWC,IAAEiC,UAAlB,UACE,cAAC,EAAD,CAASpC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAASgC,KAAKf,MACdhB,gBAAiB+B,KAAKd,kBAG1B,cAAC,EAAD,CAASvB,MAAM,aAAf,SACGqC,KAAKX,qBAAuB,EACzB,cAAC,EAAD,CACFnB,KAAM8B,KAAKf,MAAMf,KACjBC,QAAS6B,KAAKf,MAAMd,QACpBC,IAAK4B,KAAKf,MAAMb,IAChBM,MAAOsB,KAAKX,qBACZV,mBAAoBqB,KAAKL,oCAExB,cAAC,EAAD,a,GAxCKM,IAAMC,WCAxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.c18c0652.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__wcwvS\",\"totalText\":\"Statistics_totalText__1_Zhm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__L3zue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__39yOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__2kexY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3yM3W\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../Section/Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <div>\r\n        < h2 className = { s.title } > { title }</h2 >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport s from '../FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    const { good, neutral, bad } = options;\r\nreturn (\r\n    <div>\r\n        <button type=\"button\" name={good} className={s.feedbackBtn} onClick={()=>onLeaveFeedback('good')}>Good</button>\r\n        <button type=\"button\" name={neutral} className={s.feedbackBtn} onClick={()=>onLeaveFeedback('neutral')}>Neutral</button>\r\n        <button type=\"button\" name={bad} className={s.feedbackBtn} onClick={()=>onLeaveFeedback('bad')}>Bad</button>\r\n    </div >\r\n    );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage}) => {\r\n    return (\r\n        <div>\r\n            <p className={ s.text}>Good: {good}</p>\r\n            <p className={ s.text}>Neutral: {neutral}</p>\r\n            <p className={ s.text}>Bad: {bad}</p>\r\n            <p className={ s.totalText}>Total: {total }</p>\r\n           <p className={ s.totalText}>Positive feetback: { positivePercentage}%</p>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport s from '../Notification/Notification.module.css';\r\n\r\nconst Notification =()=> {  \r\n        return (\r\n            <div>               \r\n                <p className={ s.notification}>No feedback given</p>    \r\n            </div>\r\n    );\r\n};\r\n    \r\nexport default Notification;\r\n","import React from 'react';\nimport Section from './components/Section/Section' ;\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\nimport s from './App.module.css';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n   handlFeedback = feedback => {\n    this.setState(state => {\n      return {[feedback]: state[feedback] + 1};\n    });\n  };\n\n    countTotalFeedback = () => {\n      return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n    };\n\n    countPositiveFeedbackPercentage = () => {\n      const percentage = Math.round(100 * this.state.good / this.countTotalFeedback());\n      return percentage > 0 ? percentage : 0;\n    };\n\n  render() {\n    return (\n      <div className={s.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handlFeedback}\n          />\n          </Section>\n        <Section title=\"Statistics\" >\n          {this.countTotalFeedback() > 0\n            ? <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback() }\n            positivePercentage={this.countPositiveFeedbackPercentage() }\n          />\n            :<Notification/>}\n         </Section>                \n      </div>\n    );\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}